# -*- coding: utf-8 -*-
"""Copy_of_session_01_task.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i3wp8HYYpdDKyQHMBhEWcIrbARRC8l9M

# Task : Session 1
Solve these questions own your own and try to test yourself what you have learned in the session.

Happy Learning!
"""

from google.colab import drive
drive.mount('/content/drive')

"""### Q1 :- Print the given strings as per stated format.

**Given strings**:
```
"Data" "Science" "Mentorship" "Program"
"By" "CampusX"
```
**Output**:
```
Data-Science-Mentorship-Program-started-By-CampusX
```

Concept- [Seperator and End]
"""

# Write your code here
print("Data", "Science", "Mentorship", "Program",
"By", "CampusX",sep='-')

"""### Q2:- Write a program that will convert celsius value to fahrenheit."""

# Write your code here
tempature = float(input("Enter the temperature in Celcius: "))
farenheit_value = ((9/5)*tempature + 32)
print(tempature, "Â° celcius in Farenheit equals to ",farenheit_value)

"""### Q3:- Take 2 numbers as input from the user.Write a program to swap the numbers without using any special python syntax."""

# Write your code here
num_a = int(input("Enter first number: "))
num_b = int(input("Enter second number: "))
print("Before swapping num_a=",num_a,"num_b=",num_b)
temp = num_b
num_b=num_a
num_a=temp
print("After swapping num_a=",num_a,"num_b=",num_b)

"""### Q4:- Write a program to find the euclidean distance between two coordinates.Take both the coordinates from the user as input."""

# Write your code here
#let say point are p1(x1,y1) and p2(x2,y2)
#Euclidean formula D(p1,p2)=sqrt((x2-x12)**2+(y2-y1)**2)
x1=int(input("enter value of x1:")) # for simplicity lets take integer value
y1=int(input("enter value of y1:"))
print("Your first cordinate P1({},{})".format(x1,y1))
x2=int(input("enter value of x2:"))
y2=int(input("enter value of y2:"))
print("Your second cordinate P2({},{})".format(x2,y2))
distance=(((x2-x1)**2+(y2-y1)**2))**0.5        # 0.5 used to take the square root
print('The distance between P1 and P2 is ',distance)

"""### Q5:- Write a program to find the simple interest when the value of principle,rate of interest and time period is provided by the user.

"""

# Write your code here
principle=float(input("Enter the principal value: "))
rate = float(input("Enter the rate value:"))
t = float(input("Enter the time value:"))
simple_interest = (principle*rate*t)/100  # formula to calculate simple interest
print("Simple interest for S.I({},{},{}) is {}".format(principle,rate,t,simple_interest))

"""### Q6:- Write a program that will tell the number of dogs and chicken are there when the user will provide the value of total heads and legs.

For example:
Input:
heads -> 4
legs -> 12
<br>
Output:
dogs -> 2
chicken -> 2




"""

# Write your code here
total_heads = int(input("Enter the total heads: "))
total_legs = int(input("Enter the total legs: "))
dogs_count = total_legs//4
chicken_count = (total_legs%4)//2
while(dogs_count+chicken_count != total_heads):
  dogs_count = dogs_count-1
  chicken_count = chicken_count+2  # +2 increase means 4 leg equivalent to 2 chickens
  if dogs_count+chicken_count>total_heads:
    break
if dogs_count>0 and chicken_count>0 and dogs_count+chicken_count == total_heads:
  print("Dogs count: {}, Chicken counts {}".format(dogs_count,chicken_count))
else:
  print("Invalid Combination of head count and legs count")

"""### Q7:- Write a program to find the sum of squares of first n natural numbers where n will be provided by the user."""

# Write your code here
n=int(input("Enter the range value: "))
square_sum=0
for i in range(1,n+1):
  square_sum = square_sum + i**2
print("Square sum of first {} natural number is: {}".format(n,square_sum))

"""### Q8:- Given the first 2 terms of an Arithmetic Series.Find the Nth term of the series. Assume all inputs are provided by the user."""

# Write your code here
a=int(input("Enter the first term: "))
b=int(input("Enter the second term: "))
n=int(input("Enter the Nth position: "))
d=b-a
Nth_term = (a+(n-1))*d  #Arithamatic progression nth term calculation
print('{} nth term of Ap is: {}'.format(n,Nth_term))

"""### Q9:- Given 2 fractions, find the sum of those 2 fractions.Take the numerator and denominator values of the fractions from the user."""

# Write your code here
numerator1=int(input("Enter the numetor1: "))
denomenator1=int(input("Enter the denomenator1: "))

numerator2=int(input("Enter the numetor2: "))
denomenator2=int(input("Enter the denomenator2: "))

print('Your fractions are: {}/{},{}/{}'.format(numerator1,denomenator1,numerator2,denomenator2))

result_numerator=numerator1*denomenator2 + numerator2*denomenator1
result_denomenator = denomenator1*denomenator2

loop_count= min(result_numerator,result_denomenator) # we can check division till least number which will reduce loop length

#Simplifiction starts for fraction
i=2
while i <= loop_count ** 0.5:  # any prime number don't have factorization greater than their square root
  if result_numerator % i == 0 and result_denomenator % i == 0:
    result_numerator = result_numerator // i
    result_denomenator = result_denomenator // i
    continue
  else:
    break
  i=i+1
print("Final answer is: {}/{}".format(result_numerator, result_denomenator))

"""### Q10:- Given the height, width and breadth of a milk tank, you have to find out how many glasses of milk can be obtained? Assume all the inputs are provided by the user.



Input:<br>
Dimensions of the milk tank<br>
H = 20cm, L = 20cm, B = 20cm
<br><br>
Dimensions of the glass<br>
h = 3cm, r = 1cm
"""

# Write your code here
H=20;L=20;B=20 # Dimension of milk tank
h=3;r=1 # Dimension of glass
#number of glass= volume of milk tank/volume per glass = (H*L*B)/(pi*r**2*h)
num_of_glass = (H*L*B)/(3.14*1*3)
print("Total glasses of milk: ",round(num_of_glass,2))